// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC1155/ERC1155.sol";

contract FractionalOwnership is ERC1155 {
    mapping(uint256 => uint256) public totalShares;
    mapping(uint256 => mapping(address => uint256)) public sharesOwned;

    constructor() ERC1155("https://token-uri.com/{id}.json") {}

    function createToken(uint256 id, uint256 totalShares_) public {
        totalShares[id] = totalShares_;
        _mint(msg.sender, id, totalShares_, "");
    }

    function transferShares(uint256 id, address to, uint256 amount) public {
        require(sharesOwned[id][msg.sender] >= amount, "Insufficient shares");
        sharesOwned[id][msg.sender] -= amount;
        sharesOwned[id][to] += amount;
    }

    function getShares(uint256 id, address owner) public view returns (uint256) {
        return sharesOwned[id][owner];
    }
}
